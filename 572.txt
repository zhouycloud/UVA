#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <stack>
#include <vector>
#include <queue>
#include <cmath>
#define MAXN 1000
using namespace std;
bool isPocket[MAXN][MAXN],isVisited[MAXN][MAXN];
int row,col;

void dfs(int x,int y)
{
	if(x<0||y<0||x>=row||y>=col||!isPocket[x][y])
		return;
	if(!isVisited[x][y])
	{
		isVisited[x][y]=true;
		dfs(x-1,y-1);dfs(x,y-1);dfs(x+1,y-1);
		dfs(x-1,y);				dfs(x+1,y);
		dfs(x-1,y+1);dfs(x,y+1);dfs(x+1,y+1);
	}
}

int main(int argc, char* argv[])
{
	int i,j,k;
	freopen("input.txt","r",stdin);
	while (scanf("%d %d\n",&row,&col))
	{
		memset(isVisited,0,sizeof(isVisited));
		memset(isPocket,0,sizeof(isPocket));
		if(row==col&&row==0)
			break;
		for (i=0;i<row;i++)
		{
			char temp[1000];
			scanf("%s",temp);
			for (j=0;j<col;j++)
			{
				if(temp[j]=='@')
					isPocket[i][j]=true;
			}
		}
		int count=0;
		for (i=0;i<row;i++)
		{
			for (j=0;j<col;j++)
			{
				if(!isVisited[i][j]&&isPocket[i][j])
				{
					count++;
					dfs(i,j);
				}
			}
		}
		printf("%d\n",count);
	}
	return 0;
}