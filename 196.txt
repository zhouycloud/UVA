//对于我而言这道题目，也是一道典型的拓扑排序，重点是将二维数组转化为一位数组来进行运算，会简化这个计算
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <queue>
#include <cmath>
#define MAXN 1001*1001
#define INF 999999
using namespace std;
int DGAM[MAXN][100],in[MAXN];

int column,row;
int number[MAXN];

int topo(int row_temp,int col_temp)
{
	if(number[row_temp*column+col_temp]!=INF)
		return number[row_temp*column+col_temp];
	int i,j,sum;
	sum=0;
	for (i=0;i<in[row_temp*column+col_temp];i++)
		sum+=topo(DGAM[row_temp*column+col_temp][i]/column,DGAM[row_temp*column+col_temp][i]%column);
	number[row_temp*column+col_temp]=sum;
	return sum;

}

int main(int argc, char* argv[])
{
	int i,j,k,start_pos,t_count;
	freopen("input.txt","r",stdin);
	scanf("%d",&t_count);
	while (t_count--)
	{
		scanf("%d %d",&column,&row);
		memset(DGAM,0,sizeof(DGAM));
		memset(in,0,sizeof(in));
		for (i=0;i<MAXN;i++)
				number[i]=INF;
		for (i=1;i<=row;i++)
		{
			for (j=1;j<=column;j++)
			{
				char temp[1000];
				scanf("%s",temp);
				if(temp[0]!='=')
					number[i*column+j]=atoi(temp);
				else
				{
					int row_num,col_num;
					for (k=1;k<strlen(temp);k++)
					{
						row_num=col_num=0;
						while (isalpha(temp[k]))
						{
							col_num=col_num*26+temp[k]-'A'+1;
							k++;
						}
						while(isdigit(temp[k]))
						{
							row_num=row_num*10+temp[k]-'0';
							k++;
						}
						DGAM[i*column+j][in[i*column+j]++]=row_num*column+col_num;
					}
				}
			}
		}
		for (i=1;i<=row;i++)
		{
			for (j=1;j<=column;j++)
			{
				if(number[i*column+j]==INF)
					printf("%d",topo(i,j));
				else
					printf("%d",number[i*column+j]);
				if(j<column)
					printf(" ");
				else
					printf("\n");
			}
		}
	}

	return 0;
}