//该题目必须要列举所有的可行子集，注意unpadding容易出错
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <queue>
#include <cmath>
#include <algorithm>
#define MAXN 100
#define INF 999999
#define PLUS_CONSTANT 500
using namespace std;
char chess[MAXN][MAXN],chess_prim[MAXN][MAXN];
int cnt,n;

int direction[4][2]={-1,0,1,0,0,-1,0,1};

void padding(int x,int y)
{
	int i,j,tempx,tempy;
	chess[x][y]='*';
	for (i=0;i<4;i++)
	{
		for (j=1;j<n;j++)
		{
			tempx=j*direction[i][0]+x;
			tempy=j*direction[i][1]+y;

			if(tempx<0||tempx>=n||tempy<0||tempy>=n||chess[tempx][tempy]=='X')
				break;
			if(chess[tempx][tempy]=='C')
				continue;
			chess[tempx][tempy]='C';
		}
	}
}

void unpadding(int x,int y)
{
	int i,j,tempx,tempy;
	chess[x][y]='.';
	for (i=0;i<4;i++)
	{
		for (j=1;j<n;j++)
		{
			tempx=j*direction[i][0]+x;
			tempy=j*direction[i][1]+y;

			if(tempx<0||tempx>=n||tempy<0||tempy>=n||chess[tempx][tempy]=='X')
				break;
			if(chess[tempx][tempy]=='.')
				continue;
			chess[tempx][tempy]='.';
		}
	}
	for (i=0;i<n;i++)
	{
		for (j=0;j<n;j++)
		{
			if(chess[i][j]=='*')
				padding(i,j);
		}
	}
}

void dealwith(int num)
{
	int i,j;
	if(num>cnt)
		cnt=num;
	for (i=0;i<n;i++)
	{
		for (j=0;j<n;j++)
		{
			if(chess[i][j]=='.')
			{
				padding(i,j);
				dealwith(num+1);
				unpadding(i,j);
			}
		}
	}
}

int main(int argc, char* argv[])
{
	int i,j,k,t_count=0;
	freopen("input.txt","r",stdin);

	while (scanf("%d",&n)!=EOF&&n!=0)
	{
		memset(chess,0,sizeof(chess));
		memset(chess_prim,0,sizeof(chess_prim));
		cnt=0;
		for (i=0;i<n;i++)
			scanf("%s",chess_prim[i]);
		memcpy(chess,chess_prim,sizeof(chess_prim));
		dealwith(0);
		printf("%d\n",cnt);
	}

	return 0;
}