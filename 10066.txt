#include <list>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#define MAXN 3000000
#define MAXO 110
#define Min -1000000
#define INF 1e9
using namespace std;
int d[MAXO][MAXO],n,m,t1[MAXO],t2[MAXO];

int dp(int i,int j)
{
	int k;
	if(i==0||j==0)	return d[i][j]=0;
	if(d[i][j]!=-1)	return d[i][j];
	if(t1[i]==t2[j])
		d[i][j]=dp(i-1,j-1)+1;
	else
	{
		d[i][j]=dp(i-1,j);
		if(d[i][j]<dp(i,j-1))
			d[i][j]=dp(i,j-1);
	}
	return d[i][j];
}

int main(int argc, char* argv[])
{
	int i,j,k,t_count=0,t_num,p,q;
	freopen("input.txt","r",stdin);
	
	while (scanf("%d %d",&n,&m)!=EOF&&n!=0)
	{
		memset(d,-1,sizeof(d));
		for (i=1;i<=n;i++)
		{
			scanf("%d",&t1[i]);
		}
		for (i=1;i<=m;i++)
		{
			scanf("%d",&t2[i]);
		}
		
		printf("Twin Towers #%d\n",++t_count);
		printf("Number of Tiles : %d\n\n",dp(n,m));

	}
	

	return 0;
}