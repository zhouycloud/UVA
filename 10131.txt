#include <list>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#define MAXN 3000000
#define MAXO 10005
#define Min -1000000
#define INF 1e9
using namespace std;
int d[MAXO],n,w[MAXO],s[MAXO];

int dp(int i)
{
	int j;
	if(d[i]!=-1)	return d[i];
	d[i]=1;
	for (j=0;j<n;j++)
	{
		if(w[j]>w[i]&&s[i]>s[j])
		{
			if(d[i]<dp(j)+1)
				d[i]=dp(j)+1;
		}
	}
	return d[i];
}

void printf_result(int index)
{
	printf("%d\n",index+1);
	int i,value=d[index]-1;
	for (i=0;i<n;i++)
	{
		if(value==d[i]&&w[index]<w[i]&&s[index]>s[i])
		{
			printf_result(i);
			break;
		}
	}
}

int main(int argc, char* argv[])
{
	int i,j,k,t_count=0,t_num,p,q;
	freopen("input.txt","r",stdin);
	memset(d,-1,sizeof(d));
	n=0;

	while (scanf("%d %d",&w[n],&s[n])!=EOF)
		n++;
	int max=0;
	int max_index=0;
	for (i=0;i<n;i++)
	{
		if(max<dp(i))
		{
			max=dp(i);
			max_index=i;
		}
	}
	printf("%d\n",max);
	printf_result(max_index);

	return 0;
}