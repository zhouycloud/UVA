#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#define MAXN 105
#define INF 1e9
using namespace std;
int node_num,edge_num,max_num,result[MAXN];
bool GAM[MAXN][MAXN];

bool insert(int cur,int *a)
{
	int i;
	for (i=0;i<node_num;i++)
	{
		if(GAM[cur][i]&&a[i]==1)
			return false;
	}
	return true;
}

void dealwith(int cur,int sum,int *a)
{
	int i,j,k;
	if(cur==node_num)
	{
		if (sum>max_num)
		{
			max_num=sum;
			memcpy(result,a,sizeof(result));
		}
		return;
	}
	if((node_num-cur+sum)<=max_num)
		return;

	if(insert(cur,a))
	{
		a[cur]=1;
		dealwith(cur+1,sum+1,a);
	}

	a[cur]=0;
	dealwith(cur+1,sum,a);

}

int main(int argc, char* argv[])
{
	int i,j,z,t_count=0,row,col,count;
	int a[MAXN];
	freopen("input.txt","r",stdin);
	scanf("%d",&t_count);
	while (t_count--)
	{
		memset(GAM,0,sizeof(GAM));
		memset(a,0,sizeof(a));
		memset(result,0,sizeof(result));
		max_num=0;

		scanf("%d %d",&node_num,&edge_num);
		for (i=0;i<node_num;i++)
			a[i]=-1;
		for (i=0;i<edge_num;i++)
		{
			scanf("%d %d",&row,&col);
			GAM[row-1][col-1]=GAM[col-1][row-1]=true;
		}

		dealwith(0,0,a);
		printf("%d\n",max_num);
		count=1;
		for (i=0;i<node_num;i++)
		{
			if(result[i]==1)
			{
				if(count<max_num)
				{
					printf("%d ",i+1);
					count++;
				}
				else
					printf("%d",i+1);
			}
		}
		printf("\n");
	}
	return 0;
}