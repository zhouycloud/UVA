//注意哈希函数的选取，哈希函数有问题容易RE
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#define MAXN 1000000
#define INF 1e9
#define SWAP(X,Y) X=X+Y;Y=X-Y;X=X-Y
using namespace std;
const int MAXHASHSIZE=MAXN+3;
string foreign[MAXN],english[MAXN];
int next_hash[MAXN],head[MAXHASHSIZE],max_index;

int hash_loc(string str)
{
	int i,v=0;
	for (i=0;i<str.length();i++)
	{
		v=str[i]-'a'+1+v*10;
		v=v%MAXHASHSIZE;
	}
	return v%MAXHASHSIZE;
}

bool try_to_insert(string foreign_lan,string english_lan)
{
	int h=hash_loc(foreign_lan);
	int u=head[h];
	while (u!=-1)
	{
		if(foreign[u].compare(foreign_lan)==0)
			return false;
		u=next_hash[u];
	}
	foreign[max_index]=foreign_lan;
	english[max_index]=english_lan;
	next_hash[max_index]=head[h];
	head[h]=max_index;
	max_index++;

	return true;
}

int find_lan(string fore)
{
	int h=hash_loc(fore);
	int u=head[h];
	while (u!=-1)
	{
		if(fore.compare(foreign[u])==0)
			return u;
		u=next_hash[u];
	}
	return -1;
}

int main(int argc, char* argv[])
{
	int i,j,z,count,t_count=0;
	char tmp[100],chr;
	bool flag;
	freopen("input.txt","r",stdin);
	memset(head,-1,sizeof(head));
	memset(next_hash,-1,sizeof(next_hash));
	max_index=0;

	while (fgets(tmp,100,stdin)!=NULL)
	{
		if(strcmp(tmp,"\n")==0)
			break;
		char foreign_lan[100],english_lan[100];
		sscanf(tmp,"%s %s",english_lan,foreign_lan);
		string str1,str2;
		str1=foreign_lan;
		str2=english_lan;
		try_to_insert(str1,str2);
	}
	while (scanf("%s",tmp)!=EOF)
	{
		string str_tm=tmp;
		int index=find_lan(str_tm);
		if(index==-1)
			printf("eh\n");
		else
			printf("%s\n",english[index].c_str());
	}
	return 0;
}