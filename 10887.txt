#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#define MAXN 2250000
#define INF 1e9
using namespace std;
const int MAXHASHSIZE=MAXN+3;
int n,head[MAXHASHSIZE],next_hash[MAXN],max_index,fir,sec;
string state[MAXN],fir_lang[1600],sec_lang[1600];

int hash_loc(string str)
{
	int i,v;
	v=0;
	for (i=0;i<str.length();i++)
	{
		v=v*10+str[i]-'a'+1;
	}
	return (v&0x7ffffff)%MAXHASHSIZE;
}

bool try_to_insert(string str)
{
	int h=hash_loc(str);
	int u=head[h];
	while (u!=-1)
	{
		if(str.compare(state[u])==0)
			return false;
		u=next_hash[u];
	}
	state[max_index]=str;
	next_hash[max_index]=head[h];
	head[h]=max_index;
	max_index++;
	return true;
}

void dealwith()
{
	int i,j;
	string new_word,fir_word;
	for (i=0;i<fir;i++)
	{
		fir_word=fir_lang[i];
		for (j=0;j<sec;j++)
		{
			new_word=fir_word;
			new_word+=sec_lang[j];
			try_to_insert(new_word);
		}
	}
}

int main(int argc, char* argv[])
{
	int i,j,z,t_count=0,t_num;
	char tmp[100],chr;
	bool flag;
	freopen("input.txt","r",stdin);
	scanf("%d",&t_count);
	for (i=1;i<=t_count;i++)
	{
		scanf("%d %d",&fir,&sec);
		memset(head,-1,sizeof(head));
		memset(next_hash,-1,sizeof(next_hash));
		max_index=0;
		getchar();
		for (j=0;j<fir;j++)
		{
			fgets(tmp,100,stdin);
			tmp[strlen(tmp)-1]='\0';
			fir_lang[j]=tmp;
		}
		for (j=0;j<sec;j++)
		{
			fgets(tmp,100,stdin);
			tmp[strlen(tmp)-1]='\0';
			sec_lang[j]=tmp;
		}
		dealwith();
		printf("Case %d: %d\n",i,max_index);
	}

	return 0;
}