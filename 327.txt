//水题，只要注意下格式就行，完全不用树
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <stack>
#include <vector>
#include <queue>
#include <cmath>
#define MAXN 20005
#define least -100000
using namespace std;

char str1[MAXN],str2[MAXN];

int main(int argc, char* argv[])
{
	int i,j,k,temp,n,count,t_count=0;
	freopen("input.txt","r",stdin);
	memset(str1,0,sizeof(str1));
	char char_temp;
	while (scanf("%c",&char_temp)!=EOF)
	{
		int alpha[26],aftercompute[26];
		for (i=0;i<26;i++)
			alpha[i]=least;
		memset(aftercompute,0,sizeof(aftercompute));
		memset(str1,0,sizeof(str1));
		memset(str2,0,sizeof(str2));

		int count=0;
		str2[count++]=char_temp;
		while (scanf("%c",str2+count))
		{
			if(str2[count]=='\n')
				break;
			count++;
		}
		if(!strcmp(str2,"\n"))
			break;
		bool isEmpty=true;

		for (i=0;i<count;i++)
		{
			if(str2[i]!=' ')
			{
				isEmpty=false;
				break;
			}
		}
		if(isEmpty)
			break;

		str2[count]='\0';
		int str1_len=0;
		for (i=0;i<=count;i++)
		{
			if(str2[i]==' ')
				continue;
			if(isalpha(str2[i]))
			{
				int num=str2[i]-'a';
				alpha[num]=num+1;
			}
			str1[str1_len++]=str2[i];
		}
		string str=str1;
		int off=0;
		while (true)
		{
			off=str.find("++",off);
			if(off==str.npos)
				break;
			else
			{
				if((off-1)>=0&&isalpha(str[off-1]))
					aftercompute[str[off-1]-'a']++;
				else if((off+1)<str.length()&&isalpha(str[(off+2)]))
					alpha[str[off+2]-'a']++;

			}
			str=str.replace(off,2,"");
		}
		off=0;
		while (true)
		{
			off=str.find("--",off);
			if(off==str.npos)
				break;
			else
			{
				if((off-1)>=0&&isalpha(str[off-1]))
					aftercompute[str[off-1]-'a']--;
				else if((off+1)<str.length()&&isalpha(str[(off+2)]))
					alpha[str[off+2]-'a']--;

			}
			str=str.replace(off,2,"");
		}
		int sum=0;
		char c;
		int a[100],top=0;
		for(i=0;i<str.length();i++)
		{
			if(isalpha(str[i]))
			{
				a[top++]=alpha[str[i]-'a'];
				if(top>=2)
				{
					int first=a[--top];
					int sec=a[--top];
					if(c=='+')
						a[top++]=first+sec;
					else if(c=='-')
						a[top++]=sec-first;
				}
			}
			else
				c=str[i];
		} 
		printf("Expression: %s\n", str2);  
		printf("    value = %d\n", a[top-1]);  
		for (i=0;i<26;i++)
		{
			alpha[i]=alpha[i]+aftercompute[i];
		}
		for (i=0;i<26;i++)
		{
			if(alpha[i]!=least)
				printf("    %c = %d\n",('a'+i),alpha[i]);
		}
	}
	

	return 0;
}