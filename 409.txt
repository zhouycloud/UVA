//比较合理的想法是将sentence的一个个子字符串取出来去和他们比较

#include <math.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>
#define MAXN 10000

char str[MAXN][MAXN],sentence[MAXN][MAXN],cpy_sentence[MAXN][MAXN];
char sub[MAXN];

int main(int argc, char* argv[])
{
	freopen("input.txt","r",stdin);
	int n,m,i,j,k,l;
	int count[100],round=1;
	while(scanf("%d %d",&n,&m)!=EOF)
	{
		memset(count,0,sizeof(count));
		memset(sentence,0,sizeof(sentence));
		memset(cpy_sentence,0,sizeof(cpy_sentence));
		memset(str,0,sizeof(str));
		for (i=0;i<n;i++)
			scanf("%s\n",str[i]);

		for (i=0;i<m;i++)
		{
			fgets(sentence[i],MAXN,stdin);
			sentence[i][strlen(sentence[i])-1]='\0';
			memcpy(cpy_sentence[i],sentence[i],sizeof(sentence[i]));

			for (j=0;j<strlen(sentence[i]);j++)
			{
				sentence[i][j]=tolower(sentence[i][j]);
			}

			memset(sub,0,sizeof(sub));
			int t=0;
			for(j=0;j<strlen(sentence[i]);j++)
			{
				if(isalpha(sentence[i][j]))
					sub[t++]=tolower(sentence[i][j]);
				else
				{
					sub[t]='\0';
					if(strlen(sub)==0)	continue;
					for (k=0;k<n;k++)
					{
						if(strcmp(sub,str[k])==0)
							count[i]++;
					}
					memset(sub,0,sizeof(sub));
					t=0;
				}
			}
		}
		int max=0;
		for (i=0;i<m;i++)
		{
			if(count[max]<count[i])	max=i;
		}

		printf("Excuse Set #%d\n",round++);
		for (i=0;i<m;i++)
		{
			if(count[max]==count[i])
				printf("%s\n",cpy_sentence[i]);
		}
		printf("\n");
	}
	
	return 0;
}

