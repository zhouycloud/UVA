#include <list>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#define MAXN 3000000
#define MAXO 110
#define Min -1000000
#define INF 1e9
using namespace std;
int d[MAXO][MAXO],n,m;
char t1[MAXO],t2[MAXO];

int dp(int i,int j)
{
	int k;
	if(i==-1||j==-1)	return 0;
	if(d[i][j]!=-1)	return d[i][j];
	if(t1[i]==t2[j])
		d[i][j]=dp(i-1,j-1)+1;
	else
	{
		d[i][j]=dp(i-1,j);
		if(d[i][j]<dp(i,j-1))
			d[i][j]=dp(i,j-1);
	}
	return d[i][j];
}

int main(int argc, char* argv[])
{
	int i,j,k,t_count=0,t_num,p,q;
	freopen("input.txt","r",stdin);
	char temp[101];
	while (gets(t1))
	{
		memset(d,-1,sizeof(d));
		if(strcmp(t1,"#")==0)
			break;
		gets(t2);
		n=strlen(t1);
		m=strlen(t2);

		printf("Case #%d: you can visit at most %d cities.\n",++t_count,dp(n-1,m-1));
	}
	

	return 0;
}